<?php


namespace battleoase\lobbycore\forms;


use battleoase\battlecore\BattleCore;
use battleoase\lobbycore\utils\FeatureUtils;
use formBridge\form\Form;
use formBridge\form\MenuForm;
use formBridge\form\MenuOption;
use formBridge\form\ModalForm;
use pocketmine\player\Player;
use pocketmine\utils\TextFormat;

class ItemsDropsForm extends MenuForm
{
	/** @var array|int[]  */
	public static array $items = [];
	/**
	 * @var string[]
	 */
	private array $drop;

	public function __construct(Player $player)
	{
		$id = [];
		$id = ["dropped.item.diamonds.block", "dropped.item.iron.block", "dropped.item.mushroom", "dropped.item.natural", "dropped.item.rich", "§cDeactivate feature"];
		self::$items = ["dropped.item.diamonds.block" => 1500, "dropped.item.iron.block" => 1500, "dropped.item.mushroom" => 1500, "dropped.item.natural" => 1500, "dropped.item.rich" => 1500, "§cDeactivate feature" => 0];
		$this->drop = $id;
		$options = [];
		foreach (self::$items as $itemName => $price) {
			if($itemName == "§cDeactivate feature") {
				$options[] = new MenuOption($itemName);
			} else {
				if (FeatureUtils::hasBuyItem($itemName, $player->getName())) {
					$options[] = new MenuOption("§a" . $itemName);
				} else {
					$options[] = new MenuOption("§c" . $itemName . PHP_EOL . TextFormat::YELLOW . $price . "$");
				}
			}
		}
		$options[] = new MenuOption("§cZurück");
		parent::__construct("§l§6Feature", "", $options);
	}

	public function onSubmit(Player $player): ?Form
	{
		if(isset(array_keys(self::$items)[$this->getSelectedOptionIndex()])) {
			$art = array_keys(self::$items)[$this->getSelectedOptionIndex()];
			if($art == "§cDeactivate feature") {
				if (FeatureUtils::getFeature($player->getName())["item"] == "NULL") {

				} else {

					$player->sendMessage(BattleCore::getInstance()->getLanguageSystem()->translate($player, "LobbyPlayer.feature.deactivated", [
						"{FEATURE}" => BattleCore::getInstance()->getLanguageSystem()->translate($player, FeatureUtils::getFeature($player->getName())["item"])
					]));
					FeatureUtils::setItemFeature("NULL", $player->getName());
				}
			}else {
				if(FeatureUtils::hasBuyItem($art, $player->getName())) {
					if (FeatureUtils::getFeature($player->getName())["item"] == $art) {
						FeatureUtils::setItemFeature("NULL", $player->getName());
						$player->sendMessage(BattleCore::getInstance()->getLanguageSystem()->translate($player, "LobbyPlayer.feature.deactivated", [
							"{FEATURE}" => BattleCore::getInstance()->getLanguageSystem()->translate($player, $art)
						]));
					} else {
						FeatureUtils::setItemFeature($art, $player->getName());
						$player->sendMessage(BattleCore::getInstance()->getLanguageSystem()->translate($player, "LobbyPlayer.feature.activated", [
							"{FEATURE}" => $art
						]));
					}
				} else {
					$player->sendForm(new class($art, $player, $cost = array_values(self::$items)[$this->getSelectedOptionIndex()]) extends ModalForm {

						public function __construct($art, Player $player, $cost = 0)
						{
							$this->art = $art;
							$this->player = $player;
							$this->price = $cost;
							parent::__construct("Buy Confirm", "§6Bist du dir ganz sicher das du dir das Feature " . $art . " kaufen willst um $cost$", "gui.yes", "gui.no");
						}

						public function handleResponse(Player $player, $data): void
						{
							if($data === null){
								return;
							}

							if(is_bool($data)){
								if($data) {
									$art = $this->art;
									FeatureUtils::setBuyItem($this->art, $player->getName(), $this->price);
									if (FeatureUtils::getFeature($player->getName())["item"] == $art) {
										FeatureUtils::setItemFeature("NULL", $player->getName());
										$player->sendMessage(BattleCore::getInstance()->getLanguageSystem()->translate($player, "LobbyPlayer.feature.deactivated", [
											"{FEATURE}" => BattleCore::getInstance()->getLanguageSystem()->translate($player, $art)
										]));
									} else {
										FeatureUtils::setItemFeature($art, $player->getName());
										$player->sendMessage(BattleCore::getInstance()->getLanguageSystem()->translate($player, "LobbyPlayer.feature.activated", [
											"{FEATURE}" => $art
										]));
									}
								}
								$this->setChoice($data);
								return;
							}

						}
					});
				}
			}

		} else {
			$fform = new FeatureForm($player);
			$fform->open();
		}
		return parent::onSubmit($player); // TODO: Change the autogenerated stub
	}

	public function onClose(Player $player): ?Form
	{
		return parent::onClose($player); // TODO: Change the autogenerated stub
	}

}